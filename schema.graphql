type Dispatcher @entity {
  id: ID! #tokenId
  dispatcher: Bytes! # address
}

type Post @entity{
  id: ID! #tokenId
  pubId: ID! #publicationId
  contentURI: String! #content
  collectModule: Bytes! #collect address
  referenceModule: Bytes! #rm address
  referenceModuleReturn: Bytes! #abi encoded reference
  creationTime: Int! #timestamp
}

type Comment @entity{
  id: ID! #tokenId
  pubId: ID! #publicationId
  contentURI: String! #content
  profileIdPointed: ID! #pointedId
  pubIdPointed: ID! #pointed pub
  referenceModule: Bytes! #rm address
  referenceModuleReturn: Bytes! #abi encoded reference
  creationTime: Int! #timestamp
}

type Mirror @entity{
  id: ID! #tokenId
  pubId: ID! #publicationId
  contentURI: String! #content
  profileIdPointed: ID! #pointedId
  pubIdPointed: ID! #pointed pub
  referenceModule: Bytes! #rm address
  referenceModuleReturn: Bytes! #abi encoded reference
  creationTime: Int! #timestamp
}

type Follow @entity {
  id: ID! #followerAccount
  fromAccount: Account 
  fromProfileSTR: String
  toProfile: [Profile!]
  timestamp: BigInt!
}

type FollowNFTTransferred @entity {
  id: ID!
  profileId: BigInt
  followNFTID: BigInt
  from: Bytes
  to: Bytes
  timestamp: BigInt
  data: String
}